#!/system/bin/sh

#Live temperature monitor v1.1
#by broodplank

export INTERVAL="2"; #Set interval between temperature measurement, default is 1 second
export TIMESTAMP="0"; #Enable or disable timestamp print at every temperature measured
export CPUFREQ="1"; #Enable or disable printing current CPU frequency at every temperature measured
export TEMPOUT="/sdcard/tempdata"; #Set output file
export METRIC="1"; #Use metric system (celcius) or imperial system (fahrenheit)

while true
do
	#Check for timestamp usage
	if [[ ${TIMESTAMP} = 1 ]]; then
		#Print hh:mm:ss
		echo -e "Timestamp: "`date +"%T"` >> $TEMPOUT
	fi;

	#Check for cpufreq usage
	if [[ ${CPUFREQ} = 1 ]]; then
		#Print current cpufreq of cpu0 
		echo -e "Current CPU Freq: "`cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq` >> $TEMPOUT
	fi;

	#Check for measurement system (metric / imperial)
	if [[ ${METRIC} = 1 ]]; then
		#Print value of thermal_zone0, this is expressed in celcius
		echo -e "Degrees Celcius: "`cat /sys/class/thermal/thermal_zone0/temp | grep "\n*"`"\n" >> $TEMPOUT
	else
		#Print value of thermal_zone0, this is expressed in fahrenheit
		export CELCIUSREADING=`cat /sys/class/thermal/thermal_zone0/temp | grep "\n*"`;
		export FAHRENHEITMULTIPLIER=`echo "${CELCIUSREADING} 1.8 * p" |dc`;
		export FAHRENHEIT=`echo "${FAHRENHEITMULTIPLIER} 32 + p" |dc`;
		echo -e "Degrees Fahrenheit: $FAHRENHEIT\n" >> $TEMPOUT
	fi;

	#Execute interval 
	busybox sleep ${INTERVAL}s

done
